'''
[문제]

분침은 1분에 한 번씩 다음 눈금으로 이동한다. 
시침은 12분에 한 번식 다음 눈금으로 이동한다. 
즉, 1시간이 지나면 다섯 눈금을 이동하게 된다. 
이 시계는 시나 분이 바뀌는 순간 즉시 다음 눈금으로 이동한다. 
즉, 시침과 분침은 항상 눈금을 가리키고 있으며, 그 사이를 가리키는 경우는 없다.

상근이는 시계를 볼 때마다 시침과 분침이 이루는 각도를 계산해서 종이에 적어놓는다. 
이렇게 몇 년이 지나다보니 종이에는 엄청나게 많은 각도가 적혀져 있었다. 
종이를 살펴보던 상근이는 어떤 각도는 반복해서 나오는데, 
어떤 각도는 절대 나오지 않는다는 사실을 알게 되었다. 
예를 들면, 3시와 9시일 때 시침과 분침이 이루는 각도는 90도이다. 
하지만, 65도를 이루는 시간은 없다.

[입력]
입력은 여러 개의 테스트 케이스로 이루어져 있다. 
각 테스트 케이스는 한 줄이고, 정수 A가 입력으로 주어진다. (0 ≤ A ≤ 180)

[출력]
각 테스트 케이스에 대해서, 상근이의 시계의 시침과 분침이 이루는 각도가 
A도가 되는 경우가 있다면 Y를, 아니면 N을 출력한다.


'''

import sys

for watch in sys.stdin:          # 입력 끝날 때까지 한 줄씩 확인
    watch = watch.strip()
    if not watch:                # 빈 줄이면 무시하기
        continue

    angle = int(watch) # 입력값 
    possible = False  # 가능한 시간이 있는지 여부를 저장할 변수 

    for h in range(12):
            for m in range(60):
                hour_deg = 30 * h # 시침 각도 (1시간에 30도)
                minute_deg = 6 * m # 분침의 각도 (1분에 6도씩 이동)

                ans = abs(hour_deg - minute_deg) # 두 바늘이 만드는 각도 차이 계산하기
                # 180도 초과 시 360 - diff 로 변환
                if ans > 180:
                    ans = 360 - ans

                # 만약 angle 과 같다면, possible = True 로 표시
                if ans == angle:
                    possible = True
                    break   # 탐색 종료
            if possible:
                break

        #가능한 시간이 있었다면 Y, 없으면 N
    print('Y' if possible else 'N')



