"""
BOJ2512. 예산

[문제]
국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다.
국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다.
그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정한다.

1. 모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.
2. 모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다.

예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150이라고 하자.
이 경우, 상한액을 127로 잡으면, 위의 요청들에 대해서 각각 120, 110, 127, 127을 배정하고 그 합이 484로 가능한 최대가 된다. 

여러 지방의 예산요청과 국가예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 예산을 배정하는 프로그램을 작성하시오.

[입력]
첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다. N은 3 이상 10,000 이하이다.
다음 줄에는 각 지방의 예산요청을 표현하는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 값들은 모두 1 이상 100,000 이하이다.
그 다음 줄에는 총 예산을 나타내는 정수 M이 주어진다. M은 N 이상 1,000,000,000 이하이다. 

[출력]
첫째 줄에는 배정된 예산들 중 최댓값인 정수를 출력한다. 
"""

import sys
input = lambda: sys.stdin.readline().rstrip()

# 가능한 한 총합이 M 이하가 되도록 각 지방에 배정하는 최대 예산 상한액을 찾는 함수
def allocate_budget(M, requests):

    total_request = sum(requests)  # total_request: 모든 지방의 예산 요청 총합액
    cap = 0 # cap: 상한액을 저장할 변수
    
    # 총합액이 M 이하인 경우, 요청한 금액 그대로 배정 가능
    if total_request <= M:
        cap = max(requests)  # 상한액은 가장 큰 요청값
    
    # 총합액이 M을 초과하는 경우
    # 이분 탐색
    low, high = 0, max(requests) # 상한값의 후보 범위를 0부터 최대 요청액까지로 설정
    while low <= high:
        mid = (low + high) // 2 # mid: 범위의 중간 지점을 현재 탐색 중인 상한액 후보로 설정
        total = sum(min(r, mid) for r in requests)  # total: 상한액 이하의 요청액 총합

        if total <= M:  # 상한액 이하의 요청액 총합이 예산 한도 이내면,
            cap = mid   # 현재 상한액은 유효하므로 저장
            low = mid + 1 # 더 큰 상한액이 가능한지 탐색 범위를 절반의 오른쪽 구간으로 이동
        else:  # 상한액 이하의 요청액 총합이 예산을 초과했으면,
            high = mid - 1  # 상한액을 낮추기 위해 탐색 범위를 절반의 왼쪽 구간으로 이동

    return cap  # 이분 탐색 종료 후 상한액 반환


# main
N = int(input())  # N: 지방의 개수
budget_requests = list(map(int, input().split()))  # budget_requests: 각 지방의 예산 요청
M = int(input())  # M: 총 예산

max_request = allocate_budget(M, budget_requests)  # 가능한 한 총합이 M 이하가 되도록 각 지방에 배정하는 최대 예산 상한액 계산
print(max_request)  # 최대 예산 상한액 출력